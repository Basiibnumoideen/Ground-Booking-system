# Generated by Django 4.2.8 on 2024-03-01 10:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('CLUB_ADMIN', 'Club Admin'), ('MEMBER', 'Member')], max_length=50)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='batch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batchname', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('paymentperday', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='clubgallery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('img', models.ImageField(unique=True, upload_to='gallary')),
            ],
        ),
        migrations.CreateModel(
            name='clubmember',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('email', models.CharField(max_length=50)),
                ('phoneno', models.IntegerField()),
                ('date_of_birth', models.DateField()),
                ('gender', models.TextField(max_length=50)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='memberimg')),
                ('date_of_join', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('member', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='gender',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gen', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='newstb',
            fields=[
                ('newsid', models.AutoField(primary_key=True, serialize=False)),
                ('news', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='purpose',
            fields=[
                ('purposeid', models.AutoField(primary_key=True, serialize=False)),
                ('purpose_name', models.CharField(max_length=50)),
                ('payment_perday', models.IntegerField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='sportsitem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('session_dict', models.TextField(default='{}')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='memberaccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('account_number', models.CharField(max_length=50)),
                ('IFSC', models.CharField(max_length=50)),
                ('key', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.clubmember')),
            ],
        ),
        migrations.CreateModel(
            name='groundbooking',
            fields=[
                ('bookid', models.AutoField(primary_key=True, serialize=False)),
                ('bookdate', models.DateField()),
                ('bookeddate', models.DateField()),
                ('amount', models.IntegerField()),
                ('bookstatus', models.CharField(default='Pending', max_length=50)),
                ('paymentstatus', models.CharField(default='Complete', max_length=50)),
                ('membid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.clubmember')),
                ('purpose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.purpose')),
            ],
        ),
        migrations.CreateModel(
            name='clubprofile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('profileimg', models.ImageField(unique=True, upload_to='clubprofile')),
                ('clubadmin', models.CharField(max_length=50)),
                ('contactno', models.IntegerField(max_length=10)),
                ('emailid', models.EmailField(max_length=254)),
                ('description', models.TextField(max_length=100)),
                ('user_type', models.CharField(max_length=50)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='batchtime',
            fields=[
                ('batchtimeid', models.AutoField(primary_key=True, serialize=False)),
                ('fromtime', models.CharField(max_length=50)),
                ('totime', models.CharField(max_length=50)),
                ('batid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.batch')),
            ],
        ),
        migrations.CreateModel(
            name='batchregister',
            fields=[
                ('regid', models.AutoField(primary_key=True, serialize=False)),
                ('Sportsitem', models.CharField(blank=True, max_length=50, null=True)),
                ('batch', models.CharField(blank=True, max_length=50, null=True)),
                ('batchtime', models.CharField(blank=True, max_length=50, null=True)),
                ('fromdate', models.DateField()),
                ('todate', models.DateField()),
                ('amount', models.IntegerField(default=0)),
                ('paymentstatus', models.CharField(default='Complete', max_length=50)),
                ('batchstatus', models.CharField(default='Approved', max_length=50)),
                ('batchid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.batchtime')),
                ('membid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.clubmember')),
            ],
        ),
        migrations.AddField(
            model_name='batch',
            name='batch_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.sportsitem'),
        ),
    ]
